# The format of node files
#
# <node-alias-name>:
#
#    (format 01)
#    type: <node-object-type>
#    input:
#        - alias: <input-alias-name>
#          from: <input-catalog-alias-name>
#          ...
#        - ...
#    transform:
#        - alias: <transform-output-alias-name>
#          input: [<input-alias-name>, ...]
#          actions:
#              - type: <action-object-type>
#                ...
#              - ...
#        - ...
#    output:
#        - from: <input-alias-name>
#          to: <output-catalog-alias-name>
#          ...
#        - ...
#

node_seller_prepare:
    type: 'node.PandasNode'
    input:
        - alias: "seller"
          from: "demo:catl_seller_csv_type01"
    transform:
        - alias: "seller_prepare"
          input: "seller"
          actions:
              - type: "GroupBy"
                columns: ['customer_id', 'product_id']
                aggregate:
                    order: "('document_date', 'count')"
                    value_max: "('sales_value', 'max')"
                    value_margin: "('sales_value', 'lambda x: x.max() - x.min()')"
              - type: "RenameColumn"
                columns:
                    order: "order_sales"
              - type: "Filter"
                condition: 'order_sales >= 2'
        - alias: "seller_dq"
          input: "seller_prepare"
          actions:
              - type: "DataQuality"
                dq_function: "is_null"
                columns: ["customer_id"]
              - type: "DataQuality"
                dq_function: "outlier"
                columns: ["value_margin"]
                options:
                    std_value: 3
    output:
        - from: "seller_prepare"
          to: "demo:catl_seller_csv_prepare"
          mode: "overwrite"


node_seller_transform:
    type: 'node.PandasNode'
    input:
        - alias: "seller"
          from:
              type: "catalog.PandasCSVFile"
              connection:
                  type: "connection.LocalSystem"
                  endpoint: "file:///${APP_PATH}/data/demo/landing"
              endpoint: "seller_prepare_csv.type01.%Y%m%d.csv"
              encoding: "utf-8"
              header: 0
              delimiter: "|"
        - alias: "customer"
          from:
              type: "catalog.PandasCSVFile"
              connection:
                  type:     "connection.LocalSystem"
                  endpoint: "file:///${APP_PATH}/data/demo/landing"
              endpoint: "customer_csv.type01.csv"
              encoding: "utf-8"
              escapechar: "\\"
              delimiter: "|"
              header: 0
              quoting: 3
              true_values: ["Yes"]
              false_values: ["No", "false"]
    transform:
        - alias: "seller_map_customer"
          input: "seller"
          actions:
              - type: "RenameColumn"
                columns:
                    value_margin: "margin"
              - type: "GroupBy"
                columns: ['customer_id']
                aggregate:
                    total_order: "('order_sales', 'sum')"
                    value_max: "('value_max', 'max')"
                    total_margin: "('margin', 'sum')"
              - type: "Join"
                other: 'customer'
                'on': ['customer_id']
                how: 'left'
              - type: "SelectColumn"
                columns: ['customer_id', 'name', 'phone', 'total_order', 'value_max', 'total_margin']
    output:
        - from: "seller_map_customer"
          to:
              type: "catalog.PandasCSVFile"
              connection:
                  type: "connection.LocalSystem"
                  endpoint: "file:///${APP_PATH}/data/demo/landing"
              endpoint: "seller_map_customer_%Y%m%d.csv"
              encoding: "utf-8"
              header: true
              delimiter: "|"
          mode: "append"